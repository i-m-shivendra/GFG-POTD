/*
  Node is defined as
    struct node
    {
        int data;
        struct Node* next;

        Node(int x){
            data = x;
            next = NULL;
        }

    }*head;
*/
int length(Node* head)
{
    Node* curr=head;
    int count=0;
    
    while(curr != NULL)
    {
        count++;
        curr=curr->next;
    }
    return count;
}

class Solution {
  public:
    Node *reverseKGroup(Node *head, int k) {
        if(head==NULL || head->next==NULL)
        {
            return head;
        }
        
        int len=length(head);
        
        if(k>len)
        {
            k=len;
        }
        
        int count=0;
        
        Node* prev=NULL;
        Node* curr=head;
        Node* next;
        
        
        while(count < k)
        {
            next = curr -> next;
            curr -> next = prev;
            prev = curr;
            curr = next;
            count++;
        }
        
        if(next != NULL)
        {
            head->next=reverseKGroup(next,k);
        }
        
        return prev;
        
    }
};
