Bruteforce approach      TC-O(n^2)   SC-O(1)

class Solution {
  public:
    int countPairs(vector<int> &arr, int target) {
        
        int n=arr.size();
        int count=0;
        
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                if(arr[i]+arr[j]<target)
                {
                    count++;
                }
            }
        }
        return count;
    }
};

Optimal Solution     TC-O(n)    Sc-O(1)

// User function Template for C++
class Solution {
  public:
    int countPairs(vector<int> &arr, int target) {
        int n=arr.size();
        sort(arr.begin(),arr.end());
        int start = 0;
        int end = n-1;
        int ans =0;
        while(start <= end)
        {
            if((arr[start]+arr[end])>= target)
            {
                end--;
            }
            else if((arr[start]+arr[end]) < target)
            {
                ans = ans + (end-start);
                start++;
            }
        }
        return ans;
    }
};
