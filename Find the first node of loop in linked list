class Solution {
    private:
  bool isCyclic(Node* head){
    Node* slow = head;
    Node* fast = head;
    while(fast && fast -> next){
        slow = slow -> next;
        fast = fast -> next -> next;
        if(slow == fast) return true;
    }
    return false;
}

public:
Node* findFirstNode(Node* head) {
    // your code here
    // your code here
    if(!isCyclic(head)){
        return NULL;
    }
    Node* slow = head -> next;
    Node* fast = head -> next -> next;
    while(slow != fast){
        slow = slow -> next;
        fast = fast -> next -> next;
    }
    slow = head;
    while(slow != fast){
        slow = slow -> next;
        fast = fast -> next;
    }
    return slow;
}
};
